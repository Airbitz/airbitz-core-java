
apply plugin: 'android-library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    sourceSets.main.jni.srcDirs = []

    productFlavors {
		nettest {
		}
		mainnet {
		}
    }
}


dependencies {
    compile 'com.android.support:support-v4:21.0.+'
}

android.libraryVariants.all { variant -> 
  task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
    source = variant.javaCompile.source 
    classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath()) 
    options { 
      links "http://docs.oracle.com/javase/7/docs/api/" 
      linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference" 
    } 
    exclude '**/BuildConfig.java' 
    exclude '**/R.java' 
    exclude '**/SWIG*' 
    exclude '**/internal/*.java' 
  }
}

task buildAirbitzMainnet(type:Exec) {
    workingDir '..'
    commandLine './mkabc'
}

task copyAirbitzMainnet(type:Exec) {
    workingDir '..'
    commandLine './cpabc'
}

task buildAirbitzTestnet(type:Exec) {
    workingDir '..'
    environment 'ENABLE_TESTNET': 1
    commandLine './mkabc'
}

task copyAirbitzTestnet(type:Exec) {
    workingDir '..'
    environment 'ENABLE_TESTNET': 1
    commandLine './cpabc'
}

publishing {
    publications {
		mainnetLibrary(MavenPublication) {
            groupId 'co.airbitz'
            artifactId 'airbitz-core-android'
            version '0.0.7'
			artifact("$buildDir/outputs/aar/library-mainnet-release.aar")
        }
		testnetLibrary(MavenPublication) {
            groupId 'co.airbitz'
            artifactId 'airbitz-core-android-testnet'
            version '0.0.7'
			artifact("$buildDir/outputs/aar/library-nettest-release.aar")
        }
    }
}
